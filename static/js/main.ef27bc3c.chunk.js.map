{"version":3,"sources":["reducers/snippets.js","reducers/index.js","services/LsIpfsService.js","services/snippets.js","services/history.js","services/navigation.js","selectors/snippets.js","sagas/snippets/fetch.js","sagas/snippets/delete.js","sagas/snippets/create.js","sagas/snippets/update.js","sagas/index.js","actions.js","components/snippets/Heading.js","components/snippets/SnippetList.js","components/snippets/SnippetsPage.js","components/snippets/SnippetForm.js","components/snippets/CreateSnippet.js","components/snippets/EditSnippet.js","components/snippets/SnippetPage.js","components/Home.js","components/ErrorPage.js","index.js","App.js"],"names":["snippets","state","arguments","length","undefined","items","loading","action","type","Object","objectSpread","payload","reverse","snippetId","id","filter","_ref","concat","_action$payload","rest","objectWithoutProperties","map","snippet","combineReducers","Buffer","require","services_LsIpfsService","LsIpfsService","classCallCheck","this","lsName","ipfs","IpfsApi","protocol","hash","files","get","content","toString","data","buffer","add","resp","Promise","all","asyncToGenerator","regenerator_default","a","mark","_callee3","wrap","_context3","prev","next","t0","t1","t2","_this","getFromIpfs","t3","sent","t4","body","abrupt","stop","_x3","apply","saveToIpfs","newSnippet","title","updatedAt","Date","now","toConsumableArray","resolve","_ref2","forEach","p","find","_ref3","_ref4","JSON","parse","window","localStorage","Array","isArray","Error","e","stringify","fetch","lsIpfsService","destroy","delete","create","update","createBrowserHistory","navigateTo","path","history","push","selectSnippets","selectCurrentSnippet","item","fetchSnippets","watchFetchSnippets","fetchSnippetsIfNeeded","watchFetchSnippetsIfNeeded","snippetsFromApi","_context","put","call","console","error","_marked","_context2","takeLatest","_marked2","select","_marked3","_context4","_marked4","deleteSnippet","watchDeleteSnippet","delete_marked","delete_marked2","createSnippet","watchCreateSnippet","create_marked","create_marked2","updateSnippet","watchUpdateSnippet","updatedSnippet","update_marked","update_marked2","rootSaga","sagas_marked","FETCH","FETCH_IF_NEEDED","DELETE","UPDATE","Heading","onNewSnippet","onReloadSnippets","react_default","createElement","className","onClick","disabled","SnippetsList","props","url","onEditSnippet","onDeleteSnippet","key","Link","to","SnippetsPage","handleDeleteSnippet","confirm","handleNewSnippet","match","handleEditSnippet","handleReloadSnippets","_this$props$snippets","Component","connector","connect","dispatch","SnippetForm","_this$props$snippet","possibleConstructorReturn","getPrototypeOf","handleTitleChange","currentTarget","value","setState","handleBodyChange","handleSubmit","preventDefault","_this$state","trim","onSubmit","_this$state2","htmlFor","onChange","CreateSnippet","SnippetForm_SnippetForm","EditSnippetPage","ownProps","params","AdminPage","Switch","Route","exact","render","Redirect","component","CreateSnippetPagePage","SnippetPage","ErrorPage","sagaMiddleware","createSagaMiddleware","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","rootReducer","element","document","getElementById","run","es","Router","HomePage"],"mappings":"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","file":"static/js/main.ef27bc3c.chunk.js","sourcesContent":["const snippets = (state = {items: [], loading: false},\n                  action) => {\n    switch (action.type) {\n        case 'FETCH_PENDING':\n        case 'DELETE_PENDING':\n        case 'CREATE_PENDING':\n        case 'UPDATE_PENDING':\n            return {\n                ...state,\n                loading: true\n            };\n        case 'FETCH_SUCCESS':\n            return {\n                items: action.payload.reverse(),\n                loading: false\n            };\n        case 'FETCH_FAILURE':\n            return {\n                items: [],\n                loading: false\n            };\n        case 'DELETE_SUCCESS': {\n            const snippetId = action.id;\n            return {\n                items: state.items.filter(({id}) => id !== snippetId),\n                loading: false\n            }\n        }\n        case 'CREATE_SUCCESS':\n            return {\n                items: [action.payload].concat(state.items),\n                loading: false\n            };\n        case 'UPDATE_SUCCESS': {\n            const {id, ...rest} = action.payload;\n\n            return {\n                items: state.items\n                    .map(snippet => {\n                        if (snippet.id === id) {\n                            return {...snippet, ...rest};\n                        }\n                        return snippet;\n                    }),\n                loading: false\n            };\n        }\n        case 'CREATE_FAILURE':\n        case 'DELETE_FAILURE':\n        case 'UPDATE_FAILURE':\n            return {\n                ...state,\n                loading: false\n            };\n        default:\n            return state;\n    }\n};\n\nexport default snippets;\n","import { combineReducers } from 'redux';\nimport snippets from './snippets';\n\nexport default combineReducers({\n  snippets\n});\n","import IpfsApi from 'ipfs-api'\n\nconst Buffer = require('buffer/').Buffer;\n\nclass LsIpfsService {\n\n    lsName = 'ipfs-editor';\n\n    constructor() {\n        this.ipfs = IpfsApi('ipfs.infura.io', '5001', {protocol: 'https'})\n    }\n\n    get snippets() {\n        let snippets = [];\n        try {\n            snippets = JSON.parse(window.localStorage[this.lsName]);\n            if (!Array.isArray(snippets)) {\n                throw new Error(\"snippets are not array\");\n            }\n        } catch (e) {\n            this.snippets = [];\n        }\n        return snippets;\n    }\n\n    set snippets(data) {\n        window.localStorage[this.lsName] = JSON.stringify(data);\n    }\n\n    async getFromIpfs(hash) {\n        const files = await this.ipfs.files.get(hash);\n        return files[0].content.toString('utf8');\n    }\n\n    async saveToIpfs(data) {\n        let buffer = new Buffer(data);\n        const resp = await this.ipfs.files.add(buffer);\n        return resp[0].hash;\n    }\n\n    async fetch() {\n        return await Promise.all(this.snippets.map(async snippet => ({\n            ...snippet,\n            body: await this.getFromIpfs(snippet.id)\n        })));\n    }\n\n    async create(payload) {\n        let hash;\n        try {\n            hash = await this.saveToIpfs(payload.body)\n        } catch (e) {\n            return null;\n        }\n        const newSnippet = {\n            id: hash,\n            title: payload.title,\n            updatedAt: Date.now()\n        };\n\n        this.snippets = [\n            ...this.snippets,\n            newSnippet\n        ];\n        return Promise.resolve({\n            ...newSnippet,\n            body: payload.body\n        });\n    }\n\n    async update(payload) {\n        const hash = await this.saveToIpfs(payload.body);\n        const snippets = this.snippets;\n        snippets\n            .filter(({title}) => title === payload.title)\n            .forEach(p => {\n                p.id = hash;\n                p.body = payload.body;\n                p.updatedAt = Date.now();\n            });\n        this.snippets = snippets;\n        return {\n            ...payload,\n            id: hash\n        };\n    }\n\n    async delete(snippetId) {\n        if(!this.snippets.find(({id}) => id !== snippetId)) {\n            return false;\n        }\n        this.snippets = this.snippets.filter(({id}) => id !== snippetId);\n        return true;\n    }\n}\n\nexport default new LsIpfsService()\n","import lsIpfsService from './LsIpfsService'\n\nexport function fetch() {\n    return lsIpfsService.fetch();\n}\n\nexport function destroy(id) {\n    return lsIpfsService.delete(id)\n}\n\nexport function create(payload) {\n    return lsIpfsService.create(payload)\n}\n\nexport function update(payload) {\n    return lsIpfsService.update(payload)\n}\n","import { createBrowserHistory } from 'history'\nexport default createBrowserHistory()\n","import history from './history'\n\nexport default function navigateTo(path) {\n  history.push(path)\n}\n","export function selectSnippets(state) {\n  return state.snippets\n}\n\nexport function selectCurrentSnippet(state, id) {\n  const items = state.snippets.items;\n  return items.find(item => item.id === id)\n}\n","import {takeLatest, put, call, select} from 'redux-saga/effects'\nimport {fetch} from '../../services/snippets'\nimport navigateTo from '../../services/navigation'\nimport {selectSnippets} from '../../selectors/snippets'\n\nfunction* fetchSnippets() {\n    yield put({type: 'FETCH_PENDING'});\n\n    try {\n        const snippetsFromApi = yield call(fetch);\n        yield put({type: 'FETCH_SUCCESS', payload: snippetsFromApi});\n    } catch (error) {\n        yield put({type: 'FETCH_FAILURE'});\n        console.error(error);\n        yield put(navigateTo('/error'))\n    }\n}\n\nexport function* watchFetchSnippets() {\n    yield takeLatest('FETCH', fetchSnippets)\n}\n\nfunction* fetchSnippetsIfNeeded() {\n    const {items: snippets} = yield select(selectSnippets);\n    if (!snippets.length) {\n        yield call(fetchSnippets)\n    }\n}\n\nexport function* watchFetchSnippetsIfNeeded() {\n    yield takeLatest('FETCH_IF_NEEDED', fetchSnippetsIfNeeded)\n}\n","import {takeLatest, put, call} from 'redux-saga/effects'\nimport {destroy} from '../../services/snippets'\nimport navigateTo from '../../services/navigation'\n\nfunction* deleteSnippet(action) {\n    yield put({type: 'DELETE_PENDING', id: action.id});\n\n    try {\n        yield call(destroy, action.id);\n        yield put({type: 'DELETE_SUCCESS', id: action.id});\n    } catch (error) {\n        yield put({type: 'DELETE_FAILURE'});\n        console.error(error);\n        yield put(navigateTo('/error'))\n    }\n}\n\nexport default function* watchDeleteSnippet() {\n    yield takeLatest('DELETE', deleteSnippet)\n}\n","import {takeLatest, put, call} from 'redux-saga/effects'\nimport {create} from '../../services/snippets'\nimport navigateTo from '../../services/navigation'\n\nfunction* createSnippet(action) {\n    yield put({type: 'CREATE_PENDING'});\n\n    try {\n        const newSnippet = yield call(create, action.payload);\n        yield put({type: 'CREATE_SUCCESS', payload: newSnippet});\n        navigateTo('/home/snippets')\n    } catch (error) {\n        yield put({type: 'CREATE_FAILURE'});\n        console.error(error);\n        yield put(navigateTo('/error'));\n    }\n}\n\nexport default function* watchCreateSnippet() {\n    yield takeLatest('CREATE', createSnippet)\n}\n","import {takeLatest, put, call} from 'redux-saga/effects'\nimport {update} from '../../services/snippets'\nimport navigateTo from '../../services/navigation'\n\nfunction* updateSnippet(action) {\n    yield put({type: 'UPDATE_PENDING'});\n\n    try {\n        const updatedSnippet = yield call(update, action.payload);\n        yield put({type: 'UPDATE_SUCCESS', payload: updatedSnippet});\n        yield put({type: 'FETCH'});\n        navigateTo('/home/snippets');\n    } catch (error) {\n        yield put({type: 'UPDATE_FAILURE'});\n        console.error(error);\n        yield put(navigateTo('/error'));\n    }\n}\n\nexport default function* watchUpdateSnippet() {\n    yield takeLatest('UPDATE', updateSnippet)\n}\n","import { all } from 'redux-saga/effects'\nimport { watchFetchSnippetsIfNeeded, watchFetchSnippets } from './snippets/fetch'\nimport watchDeleteSnippet from './snippets/delete'\nimport watchCreateSnippet from './snippets/create'\nimport watchUpdateSnippet from './snippets/update'\n\nexport default function* rootSaga() {\n  yield all([\n    watchFetchSnippetsIfNeeded(),\n    watchFetchSnippets(),\n    watchDeleteSnippet(),\n    watchCreateSnippet(),\n    watchUpdateSnippet()\n  ])\n}\n","export const FETCH = 'FETCH';\nexport const FETCH_IF_NEEDED = 'FETCH_IF_NEEDED';\nexport const FETCH_PENDING = 'FETCH_PENDING';\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS';\nexport const FETCH_FAILURE = 'FETCH_FAILURE';\n\nexport const DELETE = 'DELETE';\nexport const DELETE_PENDING = 'DELETE_PENDING';\nexport const DELETE_SUCCESS = 'DELETE_SUCCESS';\nexport const DELETE_FAILURE = 'DELETE_FAILURE';\n\nexport const CREATE = 'CREATE';\nexport const CREATE_PENDING = 'CREATE_PENDING';\nexport const CREATE_SUCCESS = 'CREATE_SUCCESS';\nexport const CREATE_FAILURE = 'CREATE_FAILURE';\n\nexport const UPDATE = 'UPDATE';\nexport const UPDATE_PENDING = 'UPDATE_PENDING';\nexport const UPDATE_SUCCESS = 'UPDATE_SUCCESS';\nexport const UPDATE_FAILURE = 'UPDATE_FAILURE';\n","import React from 'react'\n\nexport default function Heading({\n                                    loading,\n                                    snippets,\n                                    onNewSnippet,\n                                    onReloadSnippets\n                                }) {\n    return (\n        <div>\n            <div className=\"snippets-heading\">\n                <h2 className=\"snippets-heading__title\">Snippets</h2>\n                <button\n                    className=\"btn snippets-heading__btn\"\n                    onClick={onNewSnippet}\n                    disabled={loading}\n                >\n                    New Snippet\n                </button>\n                <button\n                    className=\"btn snippets-heading__btn\"\n                    onClick={onReloadSnippets}\n                    disabled={loading || snippets.length === 0}\n                >\n                    <i className=\"fa fa-refresh\" />\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\n\nexport default function SnippetsList(props) {\n  const { loading, snippets, url, onEditSnippet, onDeleteSnippet } = props\n\n  if (loading) return <p>Loading...</p>\n  if (snippets.length === 0) return <div>No snippets.</div>\n\n  return (\n    <ul className=\"snippets\">\n      {snippets.map(snippet => (\n        <li className=\"snippets__item\" key={snippet.id}>\n          <Link className=\"snippets__title\" to={`${url}/${snippet.id}`}>\n            {snippet.title}\n          </Link>\n          <button\n            className=\"btn snippets__btn\"\n            onClick={() => onEditSnippet(snippet.id)}\n            title=\"Edit\"\n          >\n            <i className=\"fa fa-pencil-square-o\" />\n          </button>\n          <button\n            className=\"btn snippets__btn\"\n            onClick={() => onDeleteSnippet(snippet.id)}\n            title=\"Delete\"\n          >\n            <i className=\"fa fa-trash-o\" />\n          </button>\n        </li>\n      ))}\n    </ul>\n  )\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  FETCH_IF_NEEDED,\n  FETCH,\n  DELETE\n} from '../../actions'\nimport { selectSnippets } from '../../selectors/snippets'\nimport navigateTo from '../../services/navigation'\nimport SnippetsHeading from './Heading'\nimport SnippetsList from './SnippetList'\n\nclass SnippetsPage extends Component {\n  componentDidMount() {\n    this.props.fetchSnippetsIfNeeded()\n  }\n\n  handleDeleteSnippet = (id) => {\n    if (window.confirm('Do you want to delete this text snippet?')) {\n      this.props.deleteSnippet(id)\n    }\n  }\n\n  handleNewSnippet = () => {\n    const { url } = this.props.match\n    navigateTo(`${url}/new`)\n  }\n\n  handleEditSnippet = (id) => {\n    const { url } = this.props.match\n    navigateTo(`${url}/${id}/edit`)\n  }\n\n  handleReloadSnippets = () => {\n    this.props.fetchSnippets()\n  }\n\n  render() {\n    const { items: snippets, loading } = this.props.snippets;\n    const { url } = this.props.match;\n\n    return (\n      <div>\n        <SnippetsHeading\n          loading={loading}\n          snippets={snippets}\n          onNewSnippet={this.handleNewSnippet}\n          onReloadSnippets={this.handleReloadSnippets}\n        />\n\n        <SnippetsList\n          loading={loading}\n          snippets={snippets}\n          url={url}\n          onEditSnippet={this.handleEditSnippet}\n          onDeleteSnippet={this.handleDeleteSnippet}\n        />\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    snippets: selectSnippets(state)\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchSnippetsIfNeeded: () => dispatch({ type: FETCH_IF_NEEDED }),\n    deleteSnippet: (id) => dispatch({ type: DELETE, id }),\n    fetchSnippets: () => dispatch({ type: FETCH })\n  }\n}\n\nconst connector = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)\n\nexport default connector(SnippetsPage)\n","import React, { Component } from 'react'\n\n\nexport default class SnippetForm extends Component {\n  constructor(props) {\n    super(props)\n    // this is a controlled form, so\n    let title = ''\n    let body = ''\n    this.props.snippet && ({ title, body } = this.props.snippet)\n\n    this.state = {\n      title,\n      body,\n      error: ''\n    }\n  }\n\n  handleTitleChange = (e) => {\n    const title = e.currentTarget.value\n    this.setState(() => ({ title }))\n  }\n\n  handleBodyChange = (e) => {\n    const body = e.currentTarget.value\n    this.setState(() => ({ body }))\n  }\n\n  // Just some simple validations\n  // (for illustration purposes, atm)\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    let { title, body } = this.state\n    title = title.trim()\n    body = body.trim()\n\n    if (!title || !body) {\n      this.setState(() => ({\n        error: 'Please provide both title and body.'\n      }))\n      return\n    }\n\n    const limit = 3000\n    if (body.length > limit) {\n      this.setState(() => ({\n        error: `Body is too long (max. ${limit} characters)`\n      }))\n      return\n    }\n\n    this.setState(() => ({ error: '' }))\n    this.props.onSubmit({ title, body })\n  }\n\n  render() {\n    const { title, body, error } = this.state\n\n    return (\n      <div>\n        {error && <div className=\"form-error\">{error}</div>}\n\n        <form className=\"form\" onSubmit={this.handleSubmit}>\n          <div className=\"field field-text\">\n            <label htmlFor=\"title\">\n              Title:\n              <input\n                type=\"text\"\n                id=\"title\"\n                value={title}\n                onChange={this.handleTitleChange}\n              />\n            </label>\n          </div>\n\n          <div className=\"field field-text\">\n            <label htmlFor=\"body\">\n              Body:\n              <textarea\n                id=\"body\"\n                value={body}\n                onChange={this.handleBodyChange}\n              />\n            </label>\n          </div>\n\n          <button className=\"btn\">Save</button>\n        </form>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport navigateTo from '../../services/navigation'\nimport {CREATE} from '../../actions'\nimport SnippetForm from './SnippetForm'\n\nclass CreateSnippet extends Component {\n\n    handleSubmit = (payload) => {\n        this.props.createSnippet(payload)\n        navigateTo('/home/snippets')\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Create text snippet</h3>\n                <SnippetForm onSubmit={this.handleSubmit}/>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    null,\n    dispatch => ({\n        createSnippet: (payload) => dispatch({type: CREATE, payload})\n    })\n)(CreateSnippet);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport navigateTo from '../../services/navigation'\nimport { UPDATE } from '../../actions'\nimport { selectCurrentSnippet } from '../../selectors/snippets'\nimport SnippetForm from './SnippetForm'\n\nclass EditSnippetPage extends Component{\n  handleSubmit = (payload) => {\n    const { id } = this.props.snippet\n    payload = { ...payload, id };\n    this.props.updateSnippet(payload);\n    navigateTo('/home/snippets')\n  };\n\n  render() {\n    const { snippet } = this.props;\n\n    return (\n      <div>\n        <h2>Edit snippet</h2>\n        {snippet && <SnippetForm snippet={snippet} onSubmit={this.handleSubmit} />}\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const snippet = selectCurrentSnippet(state, ownProps.match.params.id)\n  return {\n    snippet\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateSnippet: (payload) => dispatch({ type: UPDATE, payload })\n  }\n}\n\nconst connector = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)\n\nexport default connector(EditSnippetPage)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { selectCurrentSnippet } from '../../selectors/snippets'\n\n\nfunction SnippetPage({ snippet }) {\n  return (\n    <div>\n      {snippet && (\n        <div>\n          <h2>{snippet.title}</h2>\n          <div>{snippet.body}</div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    snippet: selectCurrentSnippet(state, ownProps.match.params.id)\n  }\n}\n\nconst connector = connect(\n  mapStateToProps\n)\n\nexport default connector(SnippetPage)\n","import React from 'react'\nimport { Route, Switch, Redirect, Link } from 'react-router-dom'\n\nimport SnippetsPage from './snippets/SnippetsPage'\nimport CreateSnippetPagePage from './snippets/CreateSnippet'\nimport EditSnippetPage from './snippets/EditSnippet'\nimport SnippetPage from './snippets/SnippetPage'\n\nexport default function AdminPage({ match: { url } }) {\n  return (\n    <div>\n      <div className=\"header\">\n        <div className=\"container\">\n          <Link to=\"/home\" className=\"header__brand\">\n            IPFS text snippet editor\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <Switch>\n          <Route\n            exact\n            path={`${url}`}\n            render={() => <Redirect to={`${url}/snippets`} />}\n          />\n          <Route exact path={`${url}/snippets`} component={SnippetsPage} />\n          <Route exact path={`${url}/snippets/new`} component={CreateSnippetPagePage} />\n          <Route exact path={`${url}/snippets/:id`} component={SnippetPage} />\n          <Route\n            exact\n            path={`${url}/snippets/:id/edit`}\n            component={EditSnippetPage}\n          />\n          <Redirect to=\"/error\" />\n        </Switch>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function ErrorPage() {\n  return (\n    <div className=\"container\">\n      <div className=\"error-page\">\n        <h1>Something went wrong</h1>\n        <div>\n          Start at <Link to=\"/\">to home</Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from './reducers'\nimport rootSaga from './sagas'\nimport App from './App'\nimport 'normalize.css/normalize.css'\nimport 'font-awesome/css/font-awesome.min.css'\nimport './styles/main.css'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst enhancer = composeEnhancers(applyMiddleware(sagaMiddleware))\nconst store = createStore(rootReducer, enhancer);\n\nconst element = document.getElementById('root')\nif (!element) {\n  throw new Error('couldn\\'t find element with id root')\n}\n\nsagaMiddleware.run(rootSaga)\n\nrender(\n  <Provider store={store}>\n    <div>\n      <App />\n      {/*<DevTools />*/}\n    </div>\n  </Provider>,\n  element\n)\n","import React from 'react'\nimport { Router, Route, Switch, Redirect } from 'react-router-dom'\nimport history from './services/history'\nimport HomePage from './components/Home'\nimport ErrorPage from './components/ErrorPage'\n\nexport default function App() {\n  return (\n    <Router history={history}>\n      <div>\n        <Switch>\n          <Route path=\"/home\" component={HomePage} />\n          <Route path=\"/error\" component={ErrorPage} />\n          <Redirect to=\"/home\" />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n"],"sourceRoot":""}